View(df)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, pick_lists = T,
return_lists = 3, threshold = 0.3) -> df
plot(dmu)
View(df)
View(dmu)
View(pop17)
View(df)
View(df)
View(dmu)
View(pop17)
View(dmu)
View(df)
inner_join(df,dmu, by=c("bad"="DEER_MGM_1")) -> dmu
View(dmu)
left_join(dmu,pop17[c(1,2)], by=c("match"="DMU")) -> dmu
st_as_sf(dmu) -> dmu
ggplot()+
geom_sf(data=dmu, aes(fill=PosthuntPopEst))+
scale_fill_distiller(palette="RdPu",direction=1)+
theme(panel.background = element_rect(fill="white"))
## Countries ----
sul05<-import("sul05.csv")
wld<-import("wld.csv")
trees <- import("veg_data.csv")
trees_clean <- import("veg_biomass_data.csv")
tree.l <- c(unique(trees_clean$Species))
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=T,
return_lists = 3, threshold = 6, method = "lcs") -> df2
View(df2)
View(trees)
View(trees_clean)
unique(dmu$DEER_MGM_1)
# ABH
# 3/11/21
# cat_match Examples
library(dplyr)
library(stringdist)
library(readxl)
library(tidyverse)
library(varhandle)
library(rapportools)
library(sf)
library(rgeos)
library(maptools)
library(raster)
library(qacr)
library(rgdal)
library(messy.cats)
setwd("C:/Users/abhen/OneDrive - wesleyan.edu/FX_VRTHNG")
## deer pop ----
deerpop <- import("Demog.Deer.Harvest_Pop.DMU.2015-2018.Stenglein.csv")
deerpop %>%
filter(Year==2017) %>%
dplyr::select(DMU, PosthuntPopEst) -> pop17
dmu <- st_read(dsn = "NDMU Shapefiles",
layer = "Deer_Management_Zones_Units_and_Metro_Subunits")
dmu %>%
dplyr::select(geometry,DEER_MGM_1) -> dmu
unique(dmu$DEER_MGM_1)
unique(dmu$DEER_MGM_1) %>% head(10)
unique(pop17$DMU) %>% head(10)
# data is deer management unit shapefiles and deer population numbers for those units
plot(dmu)
head(pop17)
# the problem is the names for the management units don't match exactly:
unique(dmu$DEER_MGM_1) %>% head(10)
unique(pop17$DMU) %>% head(10)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, pick_lists = F,
return_lists = NA, threshold = NA) -> df
inner_join(df,dmu, by=c("bad"="DEER_MGM_1")) -> dmu
left_join(dmu,pop17[c(1,2)], by=c("match"="DMU")) -> dmu
st_as_sf(dmu) -> dmu
ggplot()+
geom_sf(data=dmu, aes(fill=PosthuntPopEst))+
scale_fill_distiller(palette="RdPu",direction=1)+
theme(panel.background = element_rect(fill="white"))
View(df)
head(dmu)
inner_join(df,dmu, by=c("bad"="DEER_MGM_1")) -> dmu
inner_join(df,dmu, by=c("bad"="DEER_MGM_1")) -> dmu
left_join(dmu,pop17[c(1,2)], by=c("match"="DMU")) -> dmu
head(dmu)
ggplot()+
geom_sf(data=dmu, aes(fill=PosthuntPopEst))+
scale_fill_distiller(palette="RdPu",direction=1)+
theme(panel.background = element_rect(fill="white"))
st_as_sf(dmu) -> dmu
ggplot()+
geom_sf(data=dmu, aes(fill=PosthuntPopEst))+
scale_fill_distiller(palette="RdPu",direction=1)+
theme(panel.background = element_rect(fill="white"))
left_join(dmu,pop17[c(1,2)], by=c("match"="DMU")) -> dmu
head(dmu)
st_as_sf(dmu) -> dmu
ggplot()+
geom_sf(data=dmu, aes(fill=PosthuntPopEst))+
scale_fill_distiller(palette="RdPu",direction=1)+
theme(panel.background = element_rect(fill="white"))
dmu %>% st_as_sf() %>% na.omit() -> dmu
ggplot()+
geom_sf(data=dmu, aes(fill=PosthuntPopEst))+
scale_fill_distiller(palette="RdPu",direction=1)+
theme(panel.background = element_rect(fill="white"))
# ABH
# 3/11/21
# cat_match Examples
library(dplyr)
library(stringdist)
library(readxl)
library(tidyverse)
library(varhandle)
library(rapportools)
library(sf)
library(rgeos)
library(maptools)
library(raster)
library(qacr)
library(rgdal)
library(messy.cats)
setwd("C:/Users/abhen/OneDrive - wesleyan.edu/FX_VRTHNG")
## deer pop ----
# reading in and subsetting data
deerpop <- import("Demog.Deer.Harvest_Pop.DMU.2015-2018.Stenglein.csv")
deerpop %>%
filter(Year==2017) %>%
dplyr::select(DMU, PosthuntPopEst) -> pop17
dmu <- st_read(dsn = "NDMU Shapefiles",
layer = "Deer_Management_Zones_Units_and_Metro_Subunits")
dmu %>%
dplyr::select(geometry,DEER_MGM_1) -> dmu
# data is deer management unit shapefiles and deer population numbers for those units
plot(dmu)
head(pop17)
# the problem is the names for the management units don't match exactly:
unique(dmu$DEER_MGM_1) %>% head(10)
unique(pop17$DMU) %>% head(10)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, pick_lists = F,
return_lists = NA, threshold = NA) -> df
inner_join(df,dmu, by=c("bad"="DEER_MGM_1")) -> dmu
left_join(dmu,pop17[c(1,2)], by=c("match"="DMU")) -> dmu
head(dmu)
dmu %>% st_as_sf() -> dmu
ggplot()+
geom_sf(data=dmu, aes(fill=PosthuntPopEst))+
scale_fill_distiller(palette="RdPu",direction=1)+
theme(panel.background = element_rect(fill="white"))
View(dmu)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, pick_lists = F,
return_lists = NA, threshold = 0.3) -> df
setwd("C:/Users/abhen/OneDrive - wesleyan.edu/FX_VRTHNG")
# reading in and subsetting data
deerpop <- import("Demog.Deer.Harvest_Pop.DMU.2015-2018.Stenglein.csv")
deerpop %>%
filter(Year==2017) %>%
dplyr::select(DMU, PosthuntPopEst) -> pop17
dmu <- st_read(dsn = "NDMU Shapefiles",
layer = "Deer_Management_Zones_Units_and_Metro_Subunits")
dmu %>%
dplyr::select(geometry,DEER_MGM_1) -> dmu
# data is deer management unit shapefiles and deer population numbers for those units
plot(dmu)
head(pop17)
# the problem is the names for the management units don't match exactly:
unique(dmu$DEER_MGM_1) %>% head(10)
unique(pop17$DMU) %>% head(10)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, pick_lists = F,
return_lists = NA, threshold = 0.3) -> df
inner_join(df,dmu, by=c("bad"="DEER_MGM_1")) -> dmu
left_join(dmu,pop17[c(1,2)], by=c("match"="DMU")) -> dmu
head(dmu)
dmu %>% st_as_sf() -> dmu
ggplot()+
geom_sf(data=dmu, aes(fill=PosthuntPopEst))+
scale_fill_distiller(palette="RdPu",direction=1)+
theme(panel.background = element_rect(fill="white"))
View(dmu)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, pick_lists = F,
return_lists = NA, threshold = 0.2) -> df
# ABH
# 3/11/21
# cat_match Examples
library(dplyr)
library(stringdist)
library(readxl)
library(tidyverse)
library(varhandle)
library(rapportools)
library(sf)
library(rgeos)
library(maptools)
library(raster)
library(qacr)
library(rgdal)
library(messy.cats)
setwd("C:/Users/abhen/OneDrive - wesleyan.edu/FX_VRTHNG")
## deer pop ----
# reading in and subsetting data
deerpop <- import("Demog.Deer.Harvest_Pop.DMU.2015-2018.Stenglein.csv")
deerpop %>%
filter(Year==2017) %>%
dplyr::select(DMU, PosthuntPopEst) -> pop17
dmu <- st_read(dsn = "NDMU Shapefiles",
layer = "Deer_Management_Zones_Units_and_Metro_Subunits")
dmu %>%
dplyr::select(geometry,DEER_MGM_1) -> dmu
# data is deer management unit shapefiles and deer population numbers for those units
plot(dmu)
head(pop17)
# the problem is the names for the management units don't match exactly:
unique(dmu$DEER_MGM_1) %>% head(10)
unique(pop17$DMU) %>% head(10)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, pick_lists = F,
return_lists = NA, threshold = 0.2) -> df
inner_join(df,dmu, by=c("bad"="DEER_MGM_1")) -> dmu
left_join(dmu,pop17[c(1,2)], by=c("match"="DMU")) -> dmu
head(dmu)
dmu %>% st_as_sf() -> dmu
ggplot()+
geom_sf(data=dmu, aes(fill=PosthuntPopEst))+
scale_fill_distiller(palette="RdPu",direction=1)+
theme(panel.background = element_rect(fill="white"))
# reading in data
trees <- import("veg_data.csv")
trees_clean <- import("veg_biomass_data.csv")
tree.l <- c(unique(trees_clean$Species))
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=T,
return_lists = 3, threshold = 6, method = "lcs") -> df2
# the method relly depends on the type of strings you are trying to match
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=T,
return_lists = 3, threshold = 0.3, method = "jw") -> df_jw
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=F,
return_lists = NA, threshold = 0.3, method = "jw") -> df_jw
View(df_jw)
# the method relly depends on the type of strings you are trying to match
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=F,
return_lists = 3, threshold = 0.3, method = "jw") -> df_jw
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=F,
return_lists = NA, threshold = 6, method = "lcs") -> df_lcs
View(df_jw)
View(df_lcs)
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=F,
return_lists = 3, threshold = 6, method = "lcs") -> df_lcs
# the method relly depends on the type of strings you are trying to match
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=F,
return_lists = 3, threshold = 0.3, method = "jw") -> df_jw
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=F,
return_lists = NA, threshold = NA, method = "lcs") -> df_lcs
View(df_jw)
View(df_lcs)
## Countries ----
sul05<-import("sul05.csv")
wld<-import("wld.csv")
cat_match(sul05$region,wld$region, p=0.1, return_dists = T,
return_lists = 3, threshold = .3) -> df3
View(df3)
# filter because there are a lot of exact matches
df3 %>%
filter(dists>0) -> df3
## Countries ----
sul05<-import("sul05.csv")
wld<-import("wld.csv")
cat_match(sul05$region,wld$region, p=0.1, return_dists = T,
return_lists = 3, threshold = .3) -> df3
# filter because there are a lot of exact matches
df3 %>%
filter(dists>0) -> df3
View(df3)
# filter because there are a lot of exact matches
df3 %>%
filter(dists>0) -> df3
sul05<-import("sul05.csv")
wld<-import("wld.csv")
cat_match(sul05$region,wld$region, p=0.1, return_dists = T,
return_lists = 3, threshold = .3) -> df3
# filter because there are a lot of exact matches
df3 %>%
filter(dists>0) -> df3
# filter because there are a lot of exact matches
df3 %>% filter(dists>0) -> df3
# filter because there are a lot of exact matches
filter(df3, dists>0) -> df3
cat_match(sul05$region,wld$region, p=0.1, return_dists = T,
return_lists = NA, threshold = .3) -> df3
# filter because there are a lot of exact matches
filter(df3, dists>0) -> df3
View(df3)
cat_match(sul05$region,wld$region, p=0.1, return_dists = T,
return_lists = NA, threshold = .2) -> df3
View(df3)
arrange(df3,desc(dists)) %>% head()
arrange(df3,desc(dists)) %>% head(10)
arrange(df3,desc(dists)) %>% head(15)
## Countries ----
sul05<-import("sul05.csv")
wld<-import("wld.csv")
cat_match(sul05$region,wld$region, p=0.1, return_dists = T,
return_lists = NA, threshold = NA) -> df3
# filter because there are a lot of exact matches
filter(df3, dists>0) -> df3_changed
View(df3_changed)
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=F,
return_lists = 3, threshold = 0.3, method = "jw") -> df_jw
View(df_jw)
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=F,
return_lists = NA, threshold = NA, method = "lcs") -> df_lcs
View(df_lcs)
setwd("C:/Users/abhen/OneDrive - wesleyan.edu/FX_VRTHNG")
# reading in and subsetting data
deerpop <- import("Demog.Deer.Harvest_Pop.DMU.2015-2018.Stenglein.csv")
deerpop %>%
filter(Year==2017) %>%
dplyr::select(DMU, PosthuntPopEst) -> pop17
dmu <- st_read(dsn = "NDMU Shapefiles",
layer = "Deer_Management_Zones_Units_and_Metro_Subunits")
dmu %>%
dplyr::select(geometry,DEER_MGM_1) -> dmu
# data is deer management unit shapefiles and deer population numbers for those units
plot(dmu)
# data is deer management unit shapefiles and deer population numbers for those units
plot(dmu)
head(pop17)
# the problem is the names for the management units don't match exactly:
unique(dmu$DEER_MGM_1) %>% head(10)
unique(pop17$DMU) %>% head(10)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, pick_lists = F,
return_lists = NA, threshold = 0.2) -> df
View(df)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T) -> df
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, threshold = 0.3) -> df
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, threshold = 0.3,
return_lists=3) -> df
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, threshold = 0.3,
return_lists=3,pick_lists = T) -> df
00
0
0
0
# data is deer management unit shapefiles and deer population numbers for those units
plot(dmu)
head(pop17)
# the problem is the names for the management units don't match exactly:
unique(dmu$DEER_MGM_1) %>% head(10)
unique(pop17$DMU) %>% head(10)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T) -> df
View(df)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T) -> df
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, threshold = 0.2) -> df
View(df)
## Countries ----
sul05<-import("sul05.csv")
wld<-import("wld.csv")
cat_match(sul05$region,wld$region, p=0.1, return_dists = T,
return_lists = NA, threshold = NA) -> df3
# filter because there are a lot of exact matches
filter(df3, dists>0) -> df3_changed
View(df3_changed)
# joining the new names
inner_join(df4,sul05, by=c("bad"="region")) -> sul05_matched
arrange(df3,desc(dists)) %>% head(15)
sul05_matched %>%
dplyr::select(match,sulfer) %>%
dplyr::rename(region=match) -> sul05_matched
ggplot()+
geom_map(data=wld,aes(map_id=region),map=wld)+
geom_map(data=sul05, aes(map_id=region,fill=sulfer),map=wld)+
expand_limits(x=wld$long,y=wld$lat)+
scale_fill_distiller("Sulfer Emissions (tonnes)", palette="RdPu",direction=1)
ggplot()+
geom_map(data=wld,aes(map_id=region),map=wld)+
geom_map(data=sul05_matched, aes(map_id=region,fill=sulfer),map=wld)+
expand_limits(x=wld$long,y=wld$lat)+
scale_fill_distiller("Sulfer Emissions (tonnes)", palette="RdPu",direction=1)
ggplot()+
geom_map(data=wld,aes(map_id=region),map=wld)+
geom_map(data=sul05_matched, aes(map_id=region,fill=sulfer),map=wld)+
expand_limits(x=wld$long,y=wld$lat)+
scale_fill_distiller("Sulfer Emissions (tonnes)", palette="RdPu",direction=1)
# joining the new names
inner_join(df4,sul05, by=c("bad"="region")) -> sul05_matched
cat_match(sul05$region,wld$region, p=0.1, return_dists = T,
return_lists = NA, threshold = .2) -> df4
# joining the new names
inner_join(df4,sul05, by=c("bad"="region")) -> sul05_matched
arrange(df3,desc(dists)) %>% head(15)
sul05_matched %>%
dplyr::select(match,sulfer) %>%
dplyr::rename(region=match) -> sul05_matched
ggplot()+
geom_map(data=wld,aes(map_id=region),map=wld)+
geom_map(data=sul05_matched, aes(map_id=region,fill=sulfer),map=wld)+
expand_limits(x=wld$long,y=wld$lat)+
scale_fill_distiller("Sulfer Emissions (tonnes)", palette="RdPu",direction=1)
cat_match(sul05$region,wld$region, p=0.1, return_dists = T,
return_lists = NA, threshold = NA) -> df3
View(df3)
cat_match(sul05$region,wld$region, p=0.1, return_dists = T,
return_lists = NA, threshold = .2) -> df4
# joining the new names
inner_join(df4,sul05, by=c("bad"="region")) -> sul05_matched
arrange(df3,desc(dists)) %>% head(15)
arrange(df4,desc(dists)) %>% head(15)
arrange(sul05_matched,desc(dists)) %>% head(15)
sul05_matched %>%
dplyr::select(match,sulfer) %>%
dplyr::rename(region=match) -> sul05_matched
View(sul05_matched)
# joining the new names
inner_join(df4,sul05, by=c("bad"="region")) -> sul05_matched
arrange(sul05_matched,desc(dists)) %>% head(15)
sul05_matched %>%
dplyr::select(match,sulfer) %>%
dplyr::rename(region=match) -> sul05_matched
arrange(sul05_matched,desc(dists)) %>% head(15)
## Countries ----
sul05<-import("sul05.csv")
wld<-import("wld.csv")
cat_match(sul05$region,wld$region, p=0.1, return_dists = T,
return_lists = NA, threshold = NA) -> df3
# filter because there are a lot of exact matches
filter(df3, dists>0) -> df3_changed
View(df3_changed)
tree.l
unique(trees$Species)
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=F,
return_lists = 3, threshold = 0.3, method = "jw") -> df_jw
arrange(df_jw,desc(dsits)) %>% head(10)
arrange(df_jw,desc(dists)) %>% head(10)
arrange(df_jw,desc(dists)) %>% view(10)
arrange(df_jw,desc(dists)) %>% view(10)
arrange(df_jw,desc(dists)) %>% glimpse(10)
arrange(df_jw,desc(dists)) %>% head(5)
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=F,
return_lists = NA, threshold = NA, method = "lcs") -> df_lcs
arrange(df_jw,desc(dists)) %>% head(5)
arrange(df_lcs,desc(dists)) %>% head(5)
cat_match(trees$Species,tree.l, p=0.1, return_dists = T, pick_lists=F,
return_lists = 1, threshold = 0.3, method = "jw") -> df_jw
arrange(df_jw,desc(dists)) %>% head(5)
arrange(df_jw,dists) %>% head(5)
arrange(df_jw,desc(dists)) %>% head(5)
setwd("C:/Users/abhen/OneDrive - wesleyan.edu/FX_VRTHNG")
# reading in and subsetting data
deerpop <- import("Demog.Deer.Harvest_Pop.DMU.2015-2018.Stenglein.csv")
deerpop %>%
filter(Year==2017) %>%
dplyr::select(DMU, PosthuntPopEst) -> pop17
glimpse(pop17)
head(pop17)
dmu <- st_read(dsn = "NDMU Shapefiles",
layer = "Deer_Management_Zones_Units_and_Metro_Subunits")
dmu %>%
dplyr::select(geometry,DEER_MGM_1) -> dmu
# data is deer management unit shapefiles and deer population numbers for those units
plot(dmu)
# data is deer management unit shapefiles and deer population numbers for those units
# the problem is the names for the management units don't match exactly:
unique(dmu$DEER_MGM_1) %>% head(10)
unique(pop17$DMU) %>% head(10)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T) -> df
head(df)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, threshold = 0.2,
return_lists=3,pick_lists = T) -> df
left_join(dmu,pop17[c(1,2)], by=c("match"="DMU")) -> dmu
left_join(dmu,pop17[c(1,2)], by=c("match"="DMU")) -> dmu
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, threshold = 0.2,
return_lists=3,pick_lists = T) -> df
left_join(dmu,pop17[c(1,2)], by=c("match"="DMU")) -> dmu
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, threshold = 0.2,
return_lists=3,pick_lists = T) -> df
View(df)
View(dmu)
inner_join(df,dmu, by=c("bad"="DEER_MGM_1")) -> dmu
View(pop17)
View(dmu)
left_join(dmu,pop17[c(1,2)], by=c("match"="DMU")) -> dmu
head(dmu)
dmu %>% st_as_sf() -> dmu
ggplot()+
geom_sf(data=dmu, aes(fill=PosthuntPopEst))+
scale_fill_distiller(palette="RdPu",direction=1)+
theme(panel.background = element_rect(fill="white"))
setwd("C:/Users/abhen/OneDrive - wesleyan.edu/FX_VRTHNG")
# reading in and subsetting data
deerpop <- import("Demog.Deer.Harvest_Pop.DMU.2015-2018.Stenglein.csv")
deerpop %>%
filter(Year==2017) %>%
dplyr::select(DMU, PosthuntPopEst) -> pop17
head(pop17)
dmu <- st_read(dsn = "NDMU Shapefiles",
layer = "Deer_Management_Zones_Units_and_Metro_Subunits")
dmu %>%
dplyr::select(geometry,DEER_MGM_1) -> dmu
plot(dmu)
# data is deer management unit shapefiles and deer population numbers for those units
# the problem is the names for the management units don't match exactly:
unique(dmu$DEER_MGM_1) %>% head(10)
unique(pop17$DMU) %>% head(10)
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T) -> df
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, threshold = 0.2) -> df
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, threshold = 0.2,
return_lists=3) -> df
cat_match(dmu$DEER_MGM_1,pop17$DMU, p = 0.1, return_dists = T, threshold = 0.2,
return_lists=3,pick_lists = T) -> df
inner_join(df,dmu, by=c("bad"="DEER_MGM_1")) -> dmu
left_join(dmu,pop17[c(1,2)], by=c("match"="DMU")) -> dmu
head(dmu)
dmu %>% st_as_sf() -> dmu
ggplot()+
geom_sf(data=dmu, aes(fill=PosthuntPopEst))+
scale_fill_distiller(palette="RdPu",direction=1)+
theme(panel.background = element_rect(fill="white"))
